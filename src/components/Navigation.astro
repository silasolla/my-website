---
import { getCurrentLocale, getTranslation } from '../i18n/translations';

const currentPath = Astro.url.pathname;
const locale = getCurrentLocale(Astro.currentLocale);

const baseUrl = locale === 'en' ? '/en' : '';
const menuTitle = getTranslation(Astro.currentLocale, 'nav.menu');
const homeText = getTranslation(Astro.currentLocale, 'nav.home');
const aboutText = getTranslation(Astro.currentLocale, 'nav.about');
const postsText = getTranslation(Astro.currentLocale, 'nav.posts');
const linksText = getTranslation(Astro.currentLocale, 'nav.links');
const toggleOpenLabel = getTranslation(Astro.currentLocale, 'nav.toggle.open');
const toggleCloseLabel = getTranslation(Astro.currentLocale, 'nav.toggle.close');
---

<nav
  class="navigation"
  data-locale={locale}
  data-open-label={toggleOpenLabel}
  data-close-label={toggleCloseLabel}
>
  <div class="nav-header">
    <h2 class="nav-title">{menuTitle}</h2>
    <button id="nav-toggle" class="nav-toggle" aria-label={toggleOpenLabel}>
      <span class="hamburger"></span>
    </button>
  </div>
  <ul class="nav-list" id="nav-list">
    <li>
      <a
        href={`${baseUrl}/`}
        class={currentPath === `${baseUrl}/` || currentPath === `${baseUrl}` ? 'active' : ''}
        >{homeText}</a
      >
    </li>
    <li>
      <a href={`${baseUrl}/about`} class={currentPath === `${baseUrl}/about` ? 'active' : ''}
        >{aboutText}</a
      >
    </li>
    <li>
      <a
        href={`${baseUrl}/posts`}
        class={currentPath.startsWith(`${baseUrl}/posts`) ? 'active' : ''}>{postsText}</a
      >
    </li>
    <li>
      <a href={`${baseUrl}/links`} class={currentPath === `${baseUrl}/links` ? 'active' : ''}
        >{linksText}</a
      >
    </li>
  </ul>
</nav>

<script>
  const nav = document.querySelector('.navigation');
  const navToggle = document.getElementById('nav-toggle');
  const navList = document.getElementById('nav-list');

  if (nav && navToggle && navList) {
    const openLabel = nav.getAttribute('data-open-label') || 'Open menu';
    const closeLabel = nav.getAttribute('data-close-label') || 'Close menu';

    navToggle.addEventListener('click', () => {
      const isOpen = navList.classList.toggle('open');
      navToggle.classList.toggle('open', isOpen);
      navToggle.setAttribute('aria-label', isOpen ? closeLabel : openLabel);
    });

    // メニュー項目をクリックしたら閉じる
    const navLinks = navList.querySelectorAll('a');
    navLinks.forEach((link) => {
      link.addEventListener('click', () => {
        navList.classList.remove('open');
        navToggle.classList.remove('open');
        navToggle.setAttribute('aria-label', openLabel);
      });
    });
  }
</script>

<style>
  .navigation {
    background: var(--color-bg-alt);
    padding: 1rem 1.5rem;
    margin-bottom: 2rem;
    border-radius: 6px;
    border: 1px solid var(--color-border);
  }

  .nav-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .nav-title {
    font-size: 1.1rem;
    color: var(--color-primary-dark);
    margin-bottom: 0;
    font-weight: 600;
  }

  .nav-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    width: 40px;
    height: 40px;
    position: relative;
  }

  .hamburger,
  .hamburger::before,
  .hamburger::after {
    display: block;
    width: 24px;
    height: 2px;
    background: var(--color-text);
    transition: all 0.3s ease;
    position: absolute;
    left: 8px;
  }

  .hamburger {
    top: 19px;
  }

  .hamburger::before {
    content: '';
    top: -8px;
  }

  .hamburger::after {
    content: '';
    top: 8px;
  }

  .nav-toggle.open .hamburger {
    background: transparent;
  }

  .nav-toggle.open .hamburger::before {
    transform: rotate(45deg);
    top: 0;
  }

  .nav-toggle.open .hamburger::after {
    transform: rotate(-45deg);
    top: 0;
  }

  .nav-list {
    list-style: none;
    padding: 0;
    margin: 0.75rem 0 0 0;
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .nav-list li a {
    display: inline-block;
    padding: 0.6rem 1.2rem;
    color: var(--color-text);
    text-decoration: none;
    border-radius: 4px;
    transition: all 0.2s ease;
    font-size: 0.95rem;
    border: 1px solid transparent;
  }

  .nav-list li a:hover {
    color: var(--color-primary);
    background: var(--color-primary-light);
    border-color: var(--color-primary);
  }

  .nav-list li a.active {
    color: white;
    background: var(--color-primary);
    font-weight: 500;
  }

  @media (max-width: 640px) {
    .navigation {
      padding: 0.75rem 1rem;
      margin-bottom: 1.5rem;
    }

    .nav-toggle {
      display: block;
    }

    .nav-list {
      display: none;
      flex-direction: column;
      gap: 0;
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 1px solid var(--color-border);
    }

    .nav-list.open {
      display: flex;
    }

    .nav-list li {
      width: 100%;
    }

    .nav-list li a {
      display: block;
      width: 100%;
      padding: 0.75rem 1rem;
      font-size: 0.95rem;
      text-align: left;
    }
  }
</style>
