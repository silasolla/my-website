---
import type { MiscCategory } from '../data/about';
import { getTranslation } from '../i18n/translations';

interface Props {
  categories: MiscCategory[];
}

const { categories } = Astro.props;
const detailsText = getTranslation(Astro.currentLocale, 'component.details');
const openLinkText = getTranslation(Astro.currentLocale, 'component.open-link');
---

<div class="misc-container">
  {
    categories.map((category) => (
      <div class="misc-category">
        <h4 class="category-title">{category.category}</h4>
        <div class="misc-grid">
          {category.items.map((item) => (
            <div class="misc-card">
              <h5 class="misc-name">{item.name}</h5>
              {item.description && (
                <details class="misc-details">
                  <summary class="misc-summary">{detailsText}</summary>
                  <p class="misc-description">{item.description}</p>
                </details>
              )}
              {item.url && (
                <a href={item.url} target="_blank" rel="noopener noreferrer" class="misc-link">
                  <svg
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                  >
                    <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                    <polyline points="15 3 21 3 21 9" />
                    <line x1="10" y1="14" x2="21" y2="3" />
                  </svg>
                  {openLinkText}
                </a>
              )}
            </div>
          ))}
        </div>
      </div>
    ))
  }
</div>

<style>
  .misc-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .misc-category {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .category-title {
    font-size: 1.2rem;
    color: var(--color-primary-dark);
    margin: 0;
    font-weight: 600;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--color-border);
  }

  .misc-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    align-items: start;
  }

  .misc-card {
    background: var(--color-bg-alt);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    transition: all 0.2s ease;
  }

  .misc-card:hover {
    border-color: var(--color-primary);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .misc-name {
    font-size: 1rem;
    color: var(--color-primary-dark);
    margin: 0;
    font-weight: 600;
    line-height: 1.4;
  }

  @media (min-width: 768px) {
    .misc-name {
      min-height: calc(1rem * 1.4 * 2);
      display: flex;
      align-items: center;
    }
  }

  .misc-details {
    border-top: 1px solid var(--color-border);
    padding-top: 0.75rem;
  }

  .misc-summary {
    cursor: pointer;
    color: var(--color-primary);
    font-size: 0.9rem;
    font-weight: 500;
    list-style: none;
    user-select: none;
  }

  .misc-summary::-webkit-details-marker {
    display: none;
  }

  .misc-summary::after {
    content: ' ▼';
    font-size: 0.75rem;
  }

  .misc-details[open] .misc-summary::after {
    content: ' ▲';
  }

  .misc-description {
    margin: 0.75rem 0 0 0;
    color: var(--color-text);
    line-height: 1.6;
    font-size: 0.95rem;
    white-space: pre-line;
  }

  .misc-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-primary);
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
    padding: 0.5rem 0;
    transition: color 0.2s ease;
    margin-top: auto;
  }

  .misc-link:hover {
    color: var(--color-primary-dark);
  }

  .misc-link svg {
    width: 14px;
    height: 14px;
  }

  @media (max-width: 768px) {
    .misc-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
