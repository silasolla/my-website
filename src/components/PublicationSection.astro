---
import type { PublicationItem } from '../data/about';
import { getTranslation } from '../i18n/translations';

interface Props {
  items: PublicationItem[];
}

const { items } = Astro.props;
const detailsText = getTranslation(Astro.currentLocale, 'component.details');
const openLinkText = getTranslation(Astro.currentLocale, 'component.open-link');
---

<div class="publication-grid">
  {
    items.map((item) => (
      <div class="publication-card">
        <div class="card-header">
          {item.date && <span class="pub-date">{item.date}</span>}
          <h4 class="pub-title">{item.title}</h4>
        </div>
        {item.description && (
          <details class="pub-details">
            <summary class="pub-summary">{detailsText}</summary>
            <p class="pub-description">{item.description}</p>
          </details>
        )}
        {item.url && (
          <a href={item.url} target="_blank" rel="noopener noreferrer" class="pub-link">
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
              <polyline points="15 3 21 3 21 9" />
              <line x1="10" y1="14" x2="21" y2="3" />
            </svg>
            {openLinkText}
          </a>
        )}
      </div>
    ))
  }
</div>

<style>
  .publication-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    align-items: start;
  }

  .publication-card {
    background: var(--color-bg-alt);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    transition: all 0.2s ease;
  }

  .publication-card:hover {
    border-color: var(--color-primary);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .card-header {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .pub-date {
    font-size: 0.85rem;
    color: var(--color-text-light);
    font-weight: 500;
  }

  .pub-title {
    font-size: 1.1rem;
    color: var(--color-primary-dark);
    margin: 0;
    font-weight: 600;
    line-height: 1.4;
  }

  @media (min-width: 768px) {
    .pub-title {
      min-height: calc(1.1rem * 1.4 * 2);
      display: flex;
      align-items: center;
    }
  }

  .pub-details {
    border-top: 1px solid var(--color-border);
    padding-top: 0.75rem;
  }

  .pub-summary {
    cursor: pointer;
    color: var(--color-primary);
    font-size: 0.9rem;
    font-weight: 500;
    list-style: none;
    user-select: none;
  }

  .pub-summary::-webkit-details-marker {
    display: none;
  }

  .pub-summary::after {
    content: ' ▼';
    font-size: 0.75rem;
  }

  .pub-details[open] .pub-summary::after {
    content: ' ▲';
  }

  .pub-description {
    margin: 0.75rem 0 0 0;
    color: var(--color-text);
    line-height: 1.6;
    font-size: 0.95rem;
    white-space: pre-line;
  }

  .pub-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-primary);
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
    padding: 0.5rem 0;
    transition: color 0.2s ease;
    margin-top: auto;
  }

  .pub-link:hover {
    color: var(--color-primary-dark);
  }

  .pub-link svg {
    width: 14px;
    height: 14px;
  }

  @media (max-width: 768px) {
    .publication-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
